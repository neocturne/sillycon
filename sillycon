#!/bin/sh

set -e

. ./config.sh

export WORKDIR='work'

mkdir -p "${WORKDIR}"

export DIR LAYERS CMD ENV HOSTNAME

# Create namespaces of the following kinds:
# - User (map current UID to root)
# - Mount
# - Network
# - IPC
# - PID
# - UTS
unshare --map-root-user --map-users=auto --map-groups=auto --mount --net --ipc --pid --uts --fork sh -ec '
	mount -t tmpfs work "${WORKDIR}"

	# Unpack all layer archives
	i=0
	lowerdir=
	sep=
	for layer in ${LAYERS}; do
		mkdir "${WORKDIR}/layer${i}"
		tar -C "${WORKDIR}/layer${i}" -xf "${DIR}/${layer}"
		lowerdir="${WORKDIR}/layer${i}${sep}${lowerdir}"
		sep=:
		i=$((i+1))
	done

	# Mount overlayfs
	mkdir "${WORKDIR}/upper" "${WORKDIR}/work" "${WORKDIR}/root"
	mount -t overlay -olowerdir="${lowerdir}",upperdir="${WORKDIR}/upper",workdir="${WORKDIR}/work" root "${WORKDIR}/root"
	cd "${WORKDIR}/root"

	# Set up mounts: /proc, /sys, /run, /tmp
	mount -t proc -o nosuid,nodev,noexec proc proc
	mount -t sysfs -o nosuid,nodev,noexec sys sys
	mount -t tmpfs -o nosuid,nodev,mode=755 run run
	mount -t tmpfs -o nosuid,nodev tmp tmp

	# Set up /dev
	mount -t tmpfs -o nosuid dev dev

	# Bind mount simple device nodes from host /dev
	for file in null zero full random urandom tty; do
		touch "dev/${file}"
		mount --bind "/dev/${file}" "dev/${file}"
	done

	# Set up mounts under /dev
	mkdir dev/pts
	mount -t devpts -o nosuid,noexec devpts dev/pts
	mkdir dev/shm
	mount -t tmpfs -o nosuid,nodev tmpfs dev/shm

	# Create symlinks in /dev
	ln -s /proc/self/fd dev/fd
	ln -s /proc/self/fd/0 dev/stdin
	ln -s /proc/self/fd/1 dev/stdout
	ln -s /proc/self/fd/2 dev/stderr
	ln -s pts/ptmx dev/ptmx

	hostname "${HOSTNAME}"

	pivot_root . tmp
	cd /
	exec /usr/bin/env -i - "${ENV}" /bin/sh -ec "
		umount -l /tmp
		exec ${CMD}
	"
'
